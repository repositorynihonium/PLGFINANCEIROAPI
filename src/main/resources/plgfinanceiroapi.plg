# Plataforma de Lançamento - Gerenciador Financeiro (PLGFINANCEIROAPI)

	+ PROJETO
	
		-- API
		
			- Java 8 - Spring Boot v2.4.1
			- MySQL v8
			- Flyway
			- Maven
			- GitHub
	
	+ FUNCIONALIDADES
	
		- https://www.notion.so/UC003-Manter-Pessoa-e998bbb834434d059fd9c46caf6afb23
	
	+ ERROS
	
		-- [CORRIGIDO] Sistema não consegue validar erros do bean validation para as annotations @NotNull e @NotEmpty
	
	+ DEMANDAS (As demandas deverao seguir o padrao: <SEGUNDO><ANO><MINUTO><MES><DIA><HORA>, por exemplo: PLGFINANCEIROAPI-33202004123113)
		
		-- [PENDENTE] PLGFINANCEIROAPI-XXXXXXXXXXXXXX
		
		-- [FINALIZADO] PLGFINANCEIROAPI-32202117011114
		
			- Responsável por configurar de aplicação para a deploy no ambiente de Produção
		
		-- [FINALIZADO] PLGFINANCEIROAPI-27202150011112
		
			- Responsável por reverter alterações de segurança
			- Responsavel por implementar consulta com projection para o endpoint de Lancamento Financeiro
		
		-- [PENDENTE] PLGFINANCEIROAPI-48202009011000
		
			- Atualização de requisicoes do Postman
			- Responsavel por implementar a autenticação regras de autenticacao para os endpoints de Lancamento Financeiro
		
		-- [FINALIZADO] PLGFINANCEIROAPI-032020230010922
		
			- Responsavel por implementar autenticacao de seguranca nos recursos da API
		
		-- [FINALIZADO] PLGFINANCEIROAPI-43202036010920
		
			- Responsável por cadastrar o campo TB_LANCAMENTO_FINANCEIRO.VALOR_DESCONTO
			- Responsável por cadastrar o campo TB_LANCAMENTO_FINANCEIRO.FORMA_PAGAMENTO
			- Responsável por cadastrar o campo TB_LANCAMENTO_FINANCEIRO.VALOR_TOTAL
			- Responsável por implementar a paginação de resultados de consulta
		
		-- [FINALIZADO] PLGFINANCEIROAPI-10202044010811
		
			- Responsável por implementar as pesquisas de Lançamentos Financeiros
		
		-- [FINALIZADO] PLGFINANCEIROAPI-10202051010714
		
			- Responsavel por implementar o codigo identificador (LANCAMENTO<DES/REC>-<DIA><MES><ANO><SEQUENCIAL>, exemplo: LANCAMENTOREC2021010701) de um determinado lancamento financeiro
			- Responsavel por implementar pesquisa filtrada por Lancamentos Financeiros
		
		-- [FINALIZADO] PLGFINANCEIROAPI-46202152010620
		
			- Responsável por implementar Regras de Negocio no endpoint de Lançamento Financeiro
			- Regra Negócio -> RG0XX - Nao permitir cadastrar um lancamento para uma pessoa inativa
		
		-- [FINALIZADO] PLGFINANCEIROAPI-16202041010611
		
			- Responsável por implementar os endpoint de consulta de Lançamento Financeiro
		
		-- [FINALIZADO] PLGFINANCEIROAPI-29202058010515
		
			- Responsável por implementar o mapeamento das entidades relacionadas com o Lançamento Financeiro
		
		-- [FINALIZADO] PLGFINANCEIROAPI-03202059010417
		
			- Implementação da alteração de dados para as Categorias de Lançamento
		
		-- [FINALIZADO] PLGFINANCEIROAPI-57202047010415
		
			- Implementando endpoint de remoção de dados
		
		-- [FINALIZADO] PLGFINANCEIROAPI-51202058010414
		
			- Responsável por implementar refactory para os controllers
			
		-- [PENDENTE] PLGFINANCEIROAPI-XXXXXXXXXXXXXX
		
			- Refatorar mapeamento do campo TB_LANCAMENTO_FINANCEIRO.ID_PRODUTO_SERVICO para aceitar uma lista de Produtos ou Servicos
			
		-- [PENDENTE] PLGFINANCEIROAPI-XXXXXXXXXXXXXX
		
			-- Responsável por configurar Flyway ao executar projeto em Producao
		
				-- Criar arquivos na pasta
					/resources/db/migration/V001__CREATE_TABLE_TB-CATEGORIA-PRODUTO.sql
				
				-- Importar dependecia no POM
					<dependency>
						<groupId>org.flywaydb</groupId>
						<artifactId>flyway-core</artifactId>
					</dependency>
					
		--  [FINALIZADO] PLGFINANCEIROAPI-33202004123113
		
			- Responsável pela versionamento inicial do projeto
	
	+ VERSIONAMENTO
		
		-- Dados de versionamento
		
			git config --global user.email "nihonium@outlook.com.br"
			git config --global user.name "Repository Nihonium"
			
			-- URL: https://github.com/repositorynihonium/PLGFINANCEIROAPI.git
			
		-- Comandos para versionar o projeto
		
			git init
			git add *
			git commit -a -m $'PLGFINANCEIROAPI-33202004123113 \n - Responsável pela versionamento inicial do projeto'
			git remote add origin https://github.com/repositorynihonium/PLGFINANCEIROAPI.git
			git push -u origin master --force
			
		-- Comandos para versionar o projeto
			git add *
			git commit -a -m $'PLGFINANCEIROAPI-48202009011000 \n - Atualização de requisicoes do Postman \n - Responsavel por implementar a autenticação com OAuth2'
			git push
			
	+ COMANDOS
	
		-- Iniciar servidor MySQL
			/opt/lampp/bin/mysql_upgrade
			sudo /opt/lampp/lampp start
			
		-- Procurar processo pelo número da porta
			lsof -w -n -i tcp:8080
			kill -9 15769
		
		-- Desisntalar DBEAVER
			dpkg -l | grep dbeaver
			sudo dpkg -r dbeaver-ce
		
		-- Executar API via command line
			mvn package
			mvn deploy:deploy-file
			mvn deploy
			./mvnw spring-boot:run
			
		-- Verificar portas ocupadas
			sudo netstat -tlpn | grep 8080
			
	+ PROCEDIMENTOS
	
		-- Implantar aplicação no ambiente de Produção (via Heroku)
		
			-- Criar Conta no site https://www.heroku.com/
				- Username:		nihonium@outlook.com.br
				- Password: 	
				
			-- Instalar Heroku CLI (https://devcenter.heroku.com/articles/heroku-cli#download-and-install)
			
				- sudo snap install --classic heroku
				
			-- Criar aplicação no Heroku
			
				heroku create plgfinanceiroapi
				
					-- https://git.heroku.com/plgfinanceiroapi.git
			
			-- Configurar Addons MySQL (databases)
			
				heroku addons:create jawsdb
				
				heroku config:get JAWSDB_URL
				
				-- URL criada: mysql://t4d81mz2ppo6vq4h:dygzteuj2if1zvjg@td5l74lo6615qq42.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/sriqaq8nqc3wsetv
			
			-- Criar variavels no ambiente Heroku
			
				heroku config:set JDBC_DATABASE_MYSQL_URL=jdbc:mysql://td5l74lo6615qq42.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/sriqaq8nqc3wsetv
				heroku config:set JDBC_DATABASE_MYSQL_USERNAME=t4d81mz2ppo6vq4h
				heroku config:set JDBC_DATABASE_MYSQL_PASSWORD=dygzteuj2if1zvjg
				
				-- Visualizar variaveis criadas
				
					heroku config
					
			-- Commitar alterações no ambiente de Produção
			
				git push heroku master
				
			-- Verificar Logs
			
				heroku log --tail
		
	+ ERROS CONHECIDOS
	
		-- Column count of mysql.proc is wrong. Expected 21, found 20. Created with MariaDB 100108, now running 100417. Please use mysql_upgrade to fix this error
			sudo /opt/lampp/lampp stop
			/opt/lampp/bin/mysql_upgrade
			sudo /opt/lampp/lampp start
			
	+ MAPEAMENTO DE ENTIDADES DE DOMINIO
	
		-- Despesa Fixa
			
		Favorecido:				Vivo Telecomunicações [Categoria: Telefônia Fixa, Móvel e Internet]
		Produto ou Serviço:		Serviços de Internet
		Data Vencimento: 		15/01/2020
		Data Pagamento:			NULL
		Valor do Pagamento:		R$ 120,00
		Responsável Pagamento: 	Jamille Batista Alves (Administradora Financeira)
		Observação:     		NULL
		
		-- Despesa Variável
		
		Favorecido:				Supermercado PraVocê (Taguatinga Centro) [Categoria: Alimentos, Supermercado, Verdurão]
		Produto ou Serviço:		Cerveja Skol Litrão sem alcoól 350ml
		Data Vencimento: 		NULL
		Data Pagamento:			05/01/2020
		Valor do Pagamento:		R$ 8,00
		Responsável Pagamento:	José Quintinn (Administrador Financeiro)
		Observação:
		
		Favorecido:				Bomba Burguer Pizzas e Refeições (Ifood Delivery de Comida e Mercado) [Categoria: Alimentos, Supermercado, Verdurão]
		Produto ou Serviço 01:	1 Pizza de Alho					- R$ 25,00
		Produto ou Serviço 02:	1 Guaraná 2 litros				- R$ 06,99
		Produto ou Serviço 03:	1 Pizza de Mussarela			- R$ 25,00
		Data Vencimento: 		NULL
		Data Pagamento:			09/01/2020
		Valor do Total:			R$ 50,99
		Valor do Desconto:		R$ 20,00
		Valor do Pagamento:		R$ 36,99
		Responsável Pagamento:	José Quintinn (Administrador Financeiro)
		Forma de Pagamento:		Cartão de Crédito (XXXX XXXX XXXX 9972)
		Observação:
		
		-- Mapeamento
		
			CREATE TABLE TB_PESSOA (
				CODIGO					-- IDENTIFICADOR UNICO DA TABELA
				TIPO_CATEGORIA_PESSOA	-- CORRESPONDE A CHAVE PRIMÁRIA DA TABELA TB_CATEGORIA_LANCAMENTO_PESSOA
				NOME					-- REFERE-SE AO NOME PROPRIO DE UMA DETERMINADA PESSOA
				NOME_FANTASIA			-- REFERE-SE AO NOME FANTASIA DE UMA DETERMINADA PESSOA JURIDICA
				NOME_FONETICO			-- REFERE-SE AO NOME FONETICO PARA PESSOAS COM NOME ESTRANGEIRO, COMO RUSSO, ARABE, HEBRAICO, CHINES
				IS_ATIVO				-- POR PADRAO DEVE SER "TRUE" PARA PESSOAS ATIVAS NO SISTEMA E "FALSE" PARA PESSOAS INATIVAS
				OBSERVACAO				-- REFERE-SE A OBSERVACAO DE UM DETERMINADO LANCAMENTO
			);
			
			CREATE TABLE TB_CATEGORIA_LANCAMENTO_FINANCEIRO (
				CODIGO				-- IDENTIFICADOR UNICO DA TABELA
				NOME				-- REFERE-SE AO NOME DA CATEGORIA. PODE SER: "DESPESA FIXA", "DESPESA VARIAVEL"
				SIGLA				-- REFERE-SE A SIGLA DE UMA TERMINADA CATEGORIA DE PESSOA. PODE SER "DF", "DV"
			);
			
			CREATE TABLE TB_PRODUTO_SERVICO (
				CODIGO				-- IDENTIFICADOR UNICO DA TABELA
				NOME				-- REFERE-SE AO NOME DA PRODUTO OU SERVICO ADQUIRIDO, ALUGADO OU EMPRESTADO
				OBSERVACAO			-- REFERE-SE A OBSERVACAO DE UM DETERMINADO PRODUTO OU SERVICO
			);
			
			CREATE TABLE TB_LANCAMENTO_FINANCEIRO(
				CODIGO						-- IDENTIFICADOR UNICO DA TABELA
				ID_FAVORECIDO				-- CORRESPONDE A CHAVE PRIMÁRIA DA TABELA TB_PESSOA
				ID_CATEGORIA_LANCAMENTO		-- CORRESPONDE A CHAVE PRIMÁRIA DA TABELA TB_CATEGORIA_LANCAMENTO_FINANCEIRO
				ID_PRODUTO_SERVICO			-- CORRESPONDE A CHAVE PRIMÁRIA DA TABELA TB_PRODUTO_SERVICO
				ID_RESPONSAVEL_PAGAMENTO	-- CORRESPONDE A CHAVE PRIMÁRIA DA TABELA "TB_PESSOA"
				DATA_VENCIMENTO				-- REFERE-SE A DATA DE VENCIMENTO, CASO O VALOR RETORNADO DA TB_CATEGORIA_LANCAMENTO FOR IGUAL A "DESPESA FIXA"
				DATA_PAGAMENTO				-- REFERE-SE A DATA DE PAGAMENTO DE UMA DETERMINADA TRANSAÇÃO FINANCEIRA
				VALOR_PAGAMENTO				-- REFERE-SE AO VALOR DE UM DETERMINADO PAGAMENTO
				OBSERVACAO					-- REFERE-SE A OBSERVACAO DE UM DETERMINADO LANCAMENTO
			);
		
		-- Query
		
			select 
			pessoa_favorecido_.nome_fantasia 									as favorecido,
			produto_servico_.nome 												as produto,
			DATE_FORMAT(lancamento_financeiro_.data_vencimento, '%d/%m/%Y')		as vencimento,
			DATE_FORMAT(lancamento_financeiro_.data_pagamento, '%d/%m/%Y')		as pagamento,
			CONCAT('R$ ', ROUND(lancamento_financeiro_.valor_pagamento, 2)) 	as valor,
			categoria_lancamento_financeiro_.nome								as tipo_lancamento,
			lancamento_financeiro_.tipo_situacao_lancamento						as situacao,
			pessoa_responsavel_pagamento_.nome_proprio 							as responsavel,
			pessoa_fonte_pagamento_.nome_fantasia 								as fonte
			-- select * 
			from tb_lancamento_financeiro lancamento_financeiro_
			join tb_pessoa pessoa_favorecido_ on pessoa_favorecido_.codigo = lancamento_financeiro_.id_favorecido
			join tb_pessoa pessoa_responsavel_pagamento_ on pessoa_responsavel_pagamento_.codigo = lancamento_financeiro_.id_responsavel_pagamento
			join tb_pessoa pessoa_fonte_pagamento_ on pessoa_fonte_pagamento_.codigo = lancamento_financeiro_.id_fonte_pagamento
			join tb_categoria_lancamento_financeiro categoria_lancamento_financeiro_ on categoria_lancamento_financeiro_.codigo = lancamento_financeiro_.id_categoria_lancamento_financeiro
			join tb_produto_servico produto_servico_ on produto_servico_.codigo = lancamento_financeiro_.id_produto_servico;
		
